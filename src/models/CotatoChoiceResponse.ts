/* tslint:disable */
/* eslint-disable */
/**
 * CS-QUIZ 프로젝트 API 명세서
 * quiz api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CotatoChoiceResponse
 */
export interface CotatoChoiceResponse {
    /**
     * 
     * @type {number}
     * @memberof CotatoChoiceResponse
     */
    choiceId?: number;
    /**
     * 
     * @type {number}
     * @memberof CotatoChoiceResponse
     */
    number?: number;
    /**
     * 
     * @type {string}
     * @memberof CotatoChoiceResponse
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof CotatoChoiceResponse
     */
    isAnswer?: CotatoChoiceResponseIsAnswerEnum;
}


/**
 * @export
 */
export const CotatoChoiceResponseIsAnswerEnum = {
    Answer: 'ANSWER',
    NoAnswer: 'NO_ANSWER',
    Secret: 'SECRET'
} as const;
export type CotatoChoiceResponseIsAnswerEnum = typeof CotatoChoiceResponseIsAnswerEnum[keyof typeof CotatoChoiceResponseIsAnswerEnum];


/**
 * Check if a given object implements the CotatoChoiceResponse interface.
 */
export function instanceOfCotatoChoiceResponse(value: object): value is CotatoChoiceResponse {
    return true;
}

export function CotatoChoiceResponseFromJSON(json: any): CotatoChoiceResponse {
    return CotatoChoiceResponseFromJSONTyped(json, false);
}

export function CotatoChoiceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoChoiceResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'choiceId': json['choiceId'] == null ? undefined : json['choiceId'],
        'number': json['number'] == null ? undefined : json['number'],
        'content': json['content'] == null ? undefined : json['content'],
        'isAnswer': json['isAnswer'] == null ? undefined : json['isAnswer'],
    };
}

export function CotatoChoiceResponseToJSON(value?: CotatoChoiceResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'choiceId': value['choiceId'],
        'number': value['number'],
        'content': value['content'],
        'isAnswer': value['isAnswer'],
    };
}

