/* tslint:disable */
/* eslint-disable */
/**
 * CS-QUIZ 프로젝트 API 명세서
 * quiz api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CotatoProjectSummaryResponse
 */
export interface CotatoProjectSummaryResponse {
    /**
     * 
     * @type {number}
     * @memberof CotatoProjectSummaryResponse
     */
    projectId?: number;
    /**
     * 
     * @type {string}
     * @memberof CotatoProjectSummaryResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CotatoProjectSummaryResponse
     */
    introduction?: string;
    /**
     * 
     * @type {number}
     * @memberof CotatoProjectSummaryResponse
     */
    generationId?: number;
    /**
     * 
     * @type {number}
     * @memberof CotatoProjectSummaryResponse
     */
    generationNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof CotatoProjectSummaryResponse
     */
    logoUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof CotatoProjectSummaryResponse
     */
    githubUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof CotatoProjectSummaryResponse
     */
    behanceUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof CotatoProjectSummaryResponse
     */
    projectUrl?: string;
}

/**
 * Check if a given object implements the CotatoProjectSummaryResponse interface.
 */
export function instanceOfCotatoProjectSummaryResponse(value: object): value is CotatoProjectSummaryResponse {
    return true;
}

export function CotatoProjectSummaryResponseFromJSON(json: any): CotatoProjectSummaryResponse {
    return CotatoProjectSummaryResponseFromJSONTyped(json, false);
}

export function CotatoProjectSummaryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoProjectSummaryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'name': json['name'] == null ? undefined : json['name'],
        'introduction': json['introduction'] == null ? undefined : json['introduction'],
        'generationId': json['generationId'] == null ? undefined : json['generationId'],
        'generationNumber': json['generationNumber'] == null ? undefined : json['generationNumber'],
        'logoUrl': json['logoUrl'] == null ? undefined : json['logoUrl'],
        'githubUrl': json['githubUrl'] == null ? undefined : json['githubUrl'],
        'behanceUrl': json['behanceUrl'] == null ? undefined : json['behanceUrl'],
        'projectUrl': json['projectUrl'] == null ? undefined : json['projectUrl'],
    };
}

export function CotatoProjectSummaryResponseToJSON(value?: CotatoProjectSummaryResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'projectId': value['projectId'],
        'name': value['name'],
        'introduction': value['introduction'],
        'generationId': value['generationId'],
        'generationNumber': value['generationNumber'],
        'logoUrl': value['logoUrl'],
        'githubUrl': value['githubUrl'],
        'behanceUrl': value['behanceUrl'],
        'projectUrl': value['projectUrl'],
    };
}

