/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 링크 목록
 * @export
 * @interface CotatoProfileLinkRequest
 */
export interface CotatoProfileLinkRequest {
    /**
     * 
     * @type {string}
     * @memberof CotatoProfileLinkRequest
     */
    urlType: CotatoProfileLinkRequestUrlTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CotatoProfileLinkRequest
     */
    url: string;
}


/**
 * @export
 */
export const CotatoProfileLinkRequestUrlTypeEnum = {
    Github: 'GITHUB',
    Behance: 'BEHANCE',
    Blog: 'BLOG',
    Other: 'OTHER'
} as const;
export type CotatoProfileLinkRequestUrlTypeEnum = typeof CotatoProfileLinkRequestUrlTypeEnum[keyof typeof CotatoProfileLinkRequestUrlTypeEnum];


/**
 * Check if a given object implements the CotatoProfileLinkRequest interface.
 */
export function instanceOfCotatoProfileLinkRequest(value: object): value is CotatoProfileLinkRequest {
    if (!('urlType' in value) || value['urlType'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function CotatoProfileLinkRequestFromJSON(json: any): CotatoProfileLinkRequest {
    return CotatoProfileLinkRequestFromJSONTyped(json, false);
}

export function CotatoProfileLinkRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoProfileLinkRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'urlType': json['urlType'],
        'url': json['url'],
    };
}

export function CotatoProfileLinkRequestToJSON(value?: CotatoProfileLinkRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'urlType': value['urlType'],
        'url': value['url'],
    };
}

