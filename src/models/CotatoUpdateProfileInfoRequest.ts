/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CotatoProfileLinkRequest } from './CotatoProfileLinkRequest.js';
import {
    CotatoProfileLinkRequestFromJSON,
    CotatoProfileLinkRequestFromJSONTyped,
    CotatoProfileLinkRequestToJSON,
} from './CotatoProfileLinkRequest.js';

/**
 * 
 * @export
 * @interface CotatoUpdateProfileInfoRequest
 */
export interface CotatoUpdateProfileInfoRequest {
    /**
     * 프로필 이미지 변환 여부
     * @type {string}
     * @memberof CotatoUpdateProfileInfoRequest
     */
    imageUpdateStatus: CotatoUpdateProfileInfoRequestImageUpdateStatusEnum;
    /**
     * 자기 소개
     * @type {string}
     * @memberof CotatoUpdateProfileInfoRequest
     */
    introduction?: string;
    /**
     * 소속 학교
     * @type {string}
     * @memberof CotatoUpdateProfileInfoRequest
     */
    university?: string;
    /**
     * 링크 목록
     * @type {Array<CotatoProfileLinkRequest>}
     * @memberof CotatoUpdateProfileInfoRequest
     */
    profileLinks?: Array<CotatoProfileLinkRequest>;
}


/**
 * @export
 */
export const CotatoUpdateProfileInfoRequestImageUpdateStatusEnum = {
    Update: 'UPDATE',
    Keep: 'KEEP',
    Default: 'DEFAULT'
} as const;
export type CotatoUpdateProfileInfoRequestImageUpdateStatusEnum = typeof CotatoUpdateProfileInfoRequestImageUpdateStatusEnum[keyof typeof CotatoUpdateProfileInfoRequestImageUpdateStatusEnum];


/**
 * Check if a given object implements the CotatoUpdateProfileInfoRequest interface.
 */
export function instanceOfCotatoUpdateProfileInfoRequest(value: object): value is CotatoUpdateProfileInfoRequest {
    if (!('imageUpdateStatus' in value) || value['imageUpdateStatus'] === undefined) return false;
    return true;
}

export function CotatoUpdateProfileInfoRequestFromJSON(json: any): CotatoUpdateProfileInfoRequest {
    return CotatoUpdateProfileInfoRequestFromJSONTyped(json, false);
}

export function CotatoUpdateProfileInfoRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoUpdateProfileInfoRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'imageUpdateStatus': json['imageUpdateStatus'],
        'introduction': json['introduction'] == null ? undefined : json['introduction'],
        'university': json['university'] == null ? undefined : json['university'],
        'profileLinks': json['profileLinks'] == null ? undefined : ((json['profileLinks'] as Array<any>).map(CotatoProfileLinkRequestFromJSON)),
    };
}

export function CotatoUpdateProfileInfoRequestToJSON(value?: CotatoUpdateProfileInfoRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'imageUpdateStatus': value['imageUpdateStatus'],
        'introduction': value['introduction'],
        'university': value['university'],
        'profileLinks': value['profileLinks'] == null ? undefined : ((value['profileLinks'] as Array<any>).map(CotatoProfileLinkRequestToJSON)),
    };
}

