/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CotatoGenerationMemberInfo
 */
export interface CotatoGenerationMemberInfo {
    /**
     * 
     * @type {number}
     * @memberof CotatoGenerationMemberInfo
     */
    generationMemberId?: number;
    /**
     * 
     * @type {string}
     * @memberof CotatoGenerationMemberInfo
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CotatoGenerationMemberInfo
     */
    position?: CotatoGenerationMemberInfoPositionEnum;
    /**
     * 
     * @type {number}
     * @memberof CotatoGenerationMemberInfo
     */
    generationNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof CotatoGenerationMemberInfo
     */
    role?: CotatoGenerationMemberInfoRoleEnum;
}


/**
 * @export
 */
export const CotatoGenerationMemberInfoPositionEnum = {
    None: 'NONE',
    Be: 'BE',
    Fe: 'FE',
    Design: 'DESIGN',
    Pm: 'PM'
} as const;
export type CotatoGenerationMemberInfoPositionEnum = typeof CotatoGenerationMemberInfoPositionEnum[keyof typeof CotatoGenerationMemberInfoPositionEnum];

/**
 * @export
 */
export const CotatoGenerationMemberInfoRoleEnum = {
    Member: 'MEMBER',
    Manager: 'MANAGER',
    Admin: 'ADMIN',
    Dev: 'DEV'
} as const;
export type CotatoGenerationMemberInfoRoleEnum = typeof CotatoGenerationMemberInfoRoleEnum[keyof typeof CotatoGenerationMemberInfoRoleEnum];


/**
 * Check if a given object implements the CotatoGenerationMemberInfo interface.
 */
export function instanceOfCotatoGenerationMemberInfo(value: object): value is CotatoGenerationMemberInfo {
    return true;
}

export function CotatoGenerationMemberInfoFromJSON(json: any): CotatoGenerationMemberInfo {
    return CotatoGenerationMemberInfoFromJSONTyped(json, false);
}

export function CotatoGenerationMemberInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoGenerationMemberInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'generationMemberId': json['generationMemberId'] == null ? undefined : json['generationMemberId'],
        'name': json['name'] == null ? undefined : json['name'],
        'position': json['position'] == null ? undefined : json['position'],
        'generationNumber': json['generationNumber'] == null ? undefined : json['generationNumber'],
        'role': json['role'] == null ? undefined : json['role'],
    };
}

export function CotatoGenerationMemberInfoToJSON(value?: CotatoGenerationMemberInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'generationMemberId': value['generationMemberId'],
        'name': value['name'],
        'position': value['position'],
        'generationNumber': value['generationNumber'],
        'role': value['role'],
    };
}

