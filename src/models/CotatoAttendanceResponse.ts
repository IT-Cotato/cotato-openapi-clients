/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CotatoAttendanceResponse
 */
export interface CotatoAttendanceResponse {
    /**
     * 
     * @type {number}
     * @memberof CotatoAttendanceResponse
     */
    sessionId?: number;
    /**
     * 
     * @type {number}
     * @memberof CotatoAttendanceResponse
     */
    attendanceId?: number;
    /**
     * 
     * @type {string}
     * @memberof CotatoAttendanceResponse
     */
    sessionTitle?: string;
    /**
     * 
     * @type {Date}
     * @memberof CotatoAttendanceResponse
     */
    sessionDateTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof CotatoAttendanceResponse
     */
    openStatus?: CotatoAttendanceResponseOpenStatusEnum;
}


/**
 * @export
 */
export const CotatoAttendanceResponseOpenStatusEnum = {
    Closed: 'CLOSED',
    Open: 'OPEN',
    Late: 'LATE',
    Absent: 'ABSENT',
    Before: 'BEFORE'
} as const;
export type CotatoAttendanceResponseOpenStatusEnum = typeof CotatoAttendanceResponseOpenStatusEnum[keyof typeof CotatoAttendanceResponseOpenStatusEnum];


/**
 * Check if a given object implements the CotatoAttendanceResponse interface.
 */
export function instanceOfCotatoAttendanceResponse(value: object): value is CotatoAttendanceResponse {
    return true;
}

export function CotatoAttendanceResponseFromJSON(json: any): CotatoAttendanceResponse {
    return CotatoAttendanceResponseFromJSONTyped(json, false);
}

export function CotatoAttendanceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoAttendanceResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'sessionId': json['sessionId'] == null ? undefined : json['sessionId'],
        'attendanceId': json['attendanceId'] == null ? undefined : json['attendanceId'],
        'sessionTitle': json['sessionTitle'] == null ? undefined : json['sessionTitle'],
        'sessionDateTime': json['sessionDateTime'] == null ? undefined : (new Date(json['sessionDateTime'])),
        'openStatus': json['openStatus'] == null ? undefined : json['openStatus'],
    };
}

export function CotatoAttendanceResponseToJSON(value?: CotatoAttendanceResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'sessionId': value['sessionId'],
        'attendanceId': value['attendanceId'],
        'sessionTitle': value['sessionTitle'],
        'sessionDateTime': value['sessionDateTime'] == null ? undefined : ((value['sessionDateTime']).toISOString()),
        'openStatus': value['openStatus'],
    };
}

