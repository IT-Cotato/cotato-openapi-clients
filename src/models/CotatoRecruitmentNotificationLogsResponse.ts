/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CotatoRecruitmentNotificationLogResponse } from './CotatoRecruitmentNotificationLogResponse.js';
import {
    CotatoRecruitmentNotificationLogResponseFromJSON,
    CotatoRecruitmentNotificationLogResponseFromJSONTyped,
    CotatoRecruitmentNotificationLogResponseToJSON,
} from './CotatoRecruitmentNotificationLogResponse.js';

/**
 * 
 * @export
 * @interface CotatoRecruitmentNotificationLogsResponse
 */
export interface CotatoRecruitmentNotificationLogsResponse {
    /**
     * 
     * @type {Array<CotatoRecruitmentNotificationLogResponse>}
     * @memberof CotatoRecruitmentNotificationLogsResponse
     */
    notificationLogs?: Array<CotatoRecruitmentNotificationLogResponse>;
}

/**
 * Check if a given object implements the CotatoRecruitmentNotificationLogsResponse interface.
 */
export function instanceOfCotatoRecruitmentNotificationLogsResponse(value: object): value is CotatoRecruitmentNotificationLogsResponse {
    return true;
}

export function CotatoRecruitmentNotificationLogsResponseFromJSON(json: any): CotatoRecruitmentNotificationLogsResponse {
    return CotatoRecruitmentNotificationLogsResponseFromJSONTyped(json, false);
}

export function CotatoRecruitmentNotificationLogsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoRecruitmentNotificationLogsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'notificationLogs': json['notificationLogs'] == null ? undefined : ((json['notificationLogs'] as Array<any>).map(CotatoRecruitmentNotificationLogResponseFromJSON)),
    };
}

export function CotatoRecruitmentNotificationLogsResponseToJSON(value?: CotatoRecruitmentNotificationLogsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'notificationLogs': value['notificationLogs'] == null ? undefined : ((value['notificationLogs'] as Array<any>).map(CotatoRecruitmentNotificationLogResponseToJSON)),
    };
}

