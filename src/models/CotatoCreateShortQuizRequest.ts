/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CotatoCreateShortAnswerRequest } from './CotatoCreateShortAnswerRequest.js';
import {
    CotatoCreateShortAnswerRequestFromJSON,
    CotatoCreateShortAnswerRequestFromJSONTyped,
    CotatoCreateShortAnswerRequestToJSON,
} from './CotatoCreateShortAnswerRequest.js';

/**
 * 
 * @export
 * @interface CotatoCreateShortQuizRequest
 */
export interface CotatoCreateShortQuizRequest {
    /**
     * 
     * @type {number}
     * @memberof CotatoCreateShortQuizRequest
     */
    number?: number;
    /**
     * 
     * @type {string}
     * @memberof CotatoCreateShortQuizRequest
     */
    question?: string;
    /**
     * 
     * @type {Blob}
     * @memberof CotatoCreateShortQuizRequest
     */
    image?: Blob;
    /**
     * 
     * @type {Array<CotatoCreateShortAnswerRequest>}
     * @memberof CotatoCreateShortQuizRequest
     */
    shortAnswers?: Array<CotatoCreateShortAnswerRequest>;
}

/**
 * Check if a given object implements the CotatoCreateShortQuizRequest interface.
 */
export function instanceOfCotatoCreateShortQuizRequest(value: object): value is CotatoCreateShortQuizRequest {
    return true;
}

export function CotatoCreateShortQuizRequestFromJSON(json: any): CotatoCreateShortQuizRequest {
    return CotatoCreateShortQuizRequestFromJSONTyped(json, false);
}

export function CotatoCreateShortQuizRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoCreateShortQuizRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'number': json['number'] == null ? undefined : json['number'],
        'question': json['question'] == null ? undefined : json['question'],
        'image': json['image'] == null ? undefined : json['image'],
        'shortAnswers': json['shortAnswers'] == null ? undefined : ((json['shortAnswers'] as Array<any>).map(CotatoCreateShortAnswerRequestFromJSON)),
    };
}

export function CotatoCreateShortQuizRequestToJSON(value?: CotatoCreateShortQuizRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'number': value['number'],
        'question': value['question'],
        'image': value['image'],
        'shortAnswers': value['shortAnswers'] == null ? undefined : ((value['shortAnswers'] as Array<any>).map(CotatoCreateShortAnswerRequestToJSON)),
    };
}

