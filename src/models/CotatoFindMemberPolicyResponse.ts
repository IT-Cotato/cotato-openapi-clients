/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CotatoPolicyInfoResponse } from './CotatoPolicyInfoResponse.js';
import {
    CotatoPolicyInfoResponseFromJSON,
    CotatoPolicyInfoResponseFromJSONTyped,
    CotatoPolicyInfoResponseToJSON,
} from './CotatoPolicyInfoResponse.js';

/**
 * 
 * @export
 * @interface CotatoFindMemberPolicyResponse
 */
export interface CotatoFindMemberPolicyResponse {
    /**
     * 
     * @type {number}
     * @memberof CotatoFindMemberPolicyResponse
     */
    memberId?: number;
    /**
     * 회원이 체크하지 않은 필수 정책 목록
     * @type {Array<CotatoPolicyInfoResponse>}
     * @memberof CotatoFindMemberPolicyResponse
     */
    essentialPolicies?: Array<CotatoPolicyInfoResponse>;
    /**
     * 회원이 체크하지 않은 선택 정책 목록
     * @type {Array<CotatoPolicyInfoResponse>}
     * @memberof CotatoFindMemberPolicyResponse
     */
    optionalPolicies?: Array<CotatoPolicyInfoResponse>;
}

/**
 * Check if a given object implements the CotatoFindMemberPolicyResponse interface.
 */
export function instanceOfCotatoFindMemberPolicyResponse(value: object): value is CotatoFindMemberPolicyResponse {
    return true;
}

export function CotatoFindMemberPolicyResponseFromJSON(json: any): CotatoFindMemberPolicyResponse {
    return CotatoFindMemberPolicyResponseFromJSONTyped(json, false);
}

export function CotatoFindMemberPolicyResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoFindMemberPolicyResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'memberId': json['memberId'] == null ? undefined : json['memberId'],
        'essentialPolicies': json['essentialPolicies'] == null ? undefined : ((json['essentialPolicies'] as Array<any>).map(CotatoPolicyInfoResponseFromJSON)),
        'optionalPolicies': json['optionalPolicies'] == null ? undefined : ((json['optionalPolicies'] as Array<any>).map(CotatoPolicyInfoResponseFromJSON)),
    };
}

export function CotatoFindMemberPolicyResponseToJSON(value?: CotatoFindMemberPolicyResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'memberId': value['memberId'],
        'essentialPolicies': value['essentialPolicies'] == null ? undefined : ((value['essentialPolicies'] as Array<any>).map(CotatoPolicyInfoResponseToJSON)),
        'optionalPolicies': value['optionalPolicies'] == null ? undefined : ((value['optionalPolicies'] as Array<any>).map(CotatoPolicyInfoResponseToJSON)),
    };
}

