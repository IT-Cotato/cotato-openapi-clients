/* tslint:disable */
/* eslint-disable */
/**
 * CS-QUIZ 프로젝트 API 명세서
 * quiz api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CotatoHallOfFameInfo } from './CotatoHallOfFameInfo.js';
import {
    CotatoHallOfFameInfoFromJSON,
    CotatoHallOfFameInfoFromJSONTyped,
    CotatoHallOfFameInfoToJSON,
} from './CotatoHallOfFameInfo.js';
import type { CotatoMyHallOfFameInfo } from './CotatoMyHallOfFameInfo.js';
import {
    CotatoMyHallOfFameInfoFromJSON,
    CotatoMyHallOfFameInfoFromJSONTyped,
    CotatoMyHallOfFameInfoToJSON,
} from './CotatoMyHallOfFameInfo.js';

/**
 * 
 * @export
 * @interface CotatoHallOfFameResponse
 */
export interface CotatoHallOfFameResponse {
    /**
     * 
     * @type {Array<CotatoHallOfFameInfo>}
     * @memberof CotatoHallOfFameResponse
     */
    scorerInfo?: Array<CotatoHallOfFameInfo>;
    /**
     * 
     * @type {Array<CotatoHallOfFameInfo>}
     * @memberof CotatoHallOfFameResponse
     */
    answerInfo?: Array<CotatoHallOfFameInfo>;
    /**
     * 
     * @type {CotatoMyHallOfFameInfo}
     * @memberof CotatoHallOfFameResponse
     */
    myInfo?: CotatoMyHallOfFameInfo;
}

/**
 * Check if a given object implements the CotatoHallOfFameResponse interface.
 */
export function instanceOfCotatoHallOfFameResponse(value: object): value is CotatoHallOfFameResponse {
    return true;
}

export function CotatoHallOfFameResponseFromJSON(json: any): CotatoHallOfFameResponse {
    return CotatoHallOfFameResponseFromJSONTyped(json, false);
}

export function CotatoHallOfFameResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoHallOfFameResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'scorerInfo': json['scorerInfo'] == null ? undefined : ((json['scorerInfo'] as Array<any>).map(CotatoHallOfFameInfoFromJSON)),
        'answerInfo': json['answerInfo'] == null ? undefined : ((json['answerInfo'] as Array<any>).map(CotatoHallOfFameInfoFromJSON)),
        'myInfo': json['myInfo'] == null ? undefined : CotatoMyHallOfFameInfoFromJSON(json['myInfo']),
    };
}

export function CotatoHallOfFameResponseToJSON(value?: CotatoHallOfFameResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'scorerInfo': value['scorerInfo'] == null ? undefined : ((value['scorerInfo'] as Array<any>).map(CotatoHallOfFameInfoToJSON)),
        'answerInfo': value['answerInfo'] == null ? undefined : ((value['answerInfo'] as Array<any>).map(CotatoHallOfFameInfoToJSON)),
        'myInfo': CotatoMyHallOfFameInfoToJSON(value['myInfo']),
    };
}

