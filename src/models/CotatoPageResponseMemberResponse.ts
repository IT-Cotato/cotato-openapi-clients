/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CotatoMemberResponse } from './CotatoMemberResponse.js';
import {
    CotatoMemberResponseFromJSON,
    CotatoMemberResponseFromJSONTyped,
    CotatoMemberResponseToJSON,
} from './CotatoMemberResponse.js';

/**
 * 
 * @export
 * @interface CotatoPageResponseMemberResponse
 */
export interface CotatoPageResponseMemberResponse {
    /**
     * 
     * @type {Array<CotatoMemberResponse>}
     * @memberof CotatoPageResponseMemberResponse
     */
    content?: Array<CotatoMemberResponse>;
    /**
     * 
     * @type {boolean}
     * @memberof CotatoPageResponseMemberResponse
     */
    hasNext?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CotatoPageResponseMemberResponse
     */
    totalPages?: number;
    /**
     * 
     * @type {number}
     * @memberof CotatoPageResponseMemberResponse
     */
    totalElements?: number;
    /**
     * 
     * @type {number}
     * @memberof CotatoPageResponseMemberResponse
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof CotatoPageResponseMemberResponse
     */
    size?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CotatoPageResponseMemberResponse
     */
    isFirst?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CotatoPageResponseMemberResponse
     */
    isLast?: boolean;
}

/**
 * Check if a given object implements the CotatoPageResponseMemberResponse interface.
 */
export function instanceOfCotatoPageResponseMemberResponse(value: object): value is CotatoPageResponseMemberResponse {
    return true;
}

export function CotatoPageResponseMemberResponseFromJSON(json: any): CotatoPageResponseMemberResponse {
    return CotatoPageResponseMemberResponseFromJSONTyped(json, false);
}

export function CotatoPageResponseMemberResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoPageResponseMemberResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(CotatoMemberResponseFromJSON)),
        'hasNext': json['hasNext'] == null ? undefined : json['hasNext'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
        'totalElements': json['totalElements'] == null ? undefined : json['totalElements'],
        'page': json['page'] == null ? undefined : json['page'],
        'size': json['size'] == null ? undefined : json['size'],
        'isFirst': json['isFirst'] == null ? undefined : json['isFirst'],
        'isLast': json['isLast'] == null ? undefined : json['isLast'],
    };
}

export function CotatoPageResponseMemberResponseToJSON(value?: CotatoPageResponseMemberResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(CotatoMemberResponseToJSON)),
        'hasNext': value['hasNext'],
        'totalPages': value['totalPages'],
        'totalElements': value['totalElements'],
        'page': value['page'],
        'size': value['size'],
        'isFirst': value['isFirst'],
        'isLast': value['isLast'],
    };
}

