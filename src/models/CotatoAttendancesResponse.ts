/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CotatoAttendanceWithSessionResponse } from './CotatoAttendanceWithSessionResponse.js';
import {
    CotatoAttendanceWithSessionResponseFromJSON,
    CotatoAttendanceWithSessionResponseFromJSONTyped,
    CotatoAttendanceWithSessionResponseToJSON,
} from './CotatoAttendanceWithSessionResponse.js';

/**
 * 
 * @export
 * @interface CotatoAttendancesResponse
 */
export interface CotatoAttendancesResponse {
    /**
     * 
     * @type {number}
     * @memberof CotatoAttendancesResponse
     */
    generationId: number;
    /**
     * 
     * @type {number}
     * @memberof CotatoAttendancesResponse
     */
    generationNumber: number;
    /**
     * 
     * @type {Array<CotatoAttendanceWithSessionResponse>}
     * @memberof CotatoAttendancesResponse
     */
    attendances?: Array<CotatoAttendanceWithSessionResponse>;
}

/**
 * Check if a given object implements the CotatoAttendancesResponse interface.
 */
export function instanceOfCotatoAttendancesResponse(value: object): value is CotatoAttendancesResponse {
    if (!('generationId' in value) || value['generationId'] === undefined) return false;
    if (!('generationNumber' in value) || value['generationNumber'] === undefined) return false;
    return true;
}

export function CotatoAttendancesResponseFromJSON(json: any): CotatoAttendancesResponse {
    return CotatoAttendancesResponseFromJSONTyped(json, false);
}

export function CotatoAttendancesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoAttendancesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'generationId': json['generationId'],
        'generationNumber': json['generationNumber'],
        'attendances': json['attendances'] == null ? undefined : ((json['attendances'] as Array<any>).map(CotatoAttendanceWithSessionResponseFromJSON)),
    };
}

export function CotatoAttendancesResponseToJSON(value?: CotatoAttendancesResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'generationId': value['generationId'],
        'generationNumber': value['generationNumber'],
        'attendances': value['attendances'] == null ? undefined : ((value['attendances'] as Array<any>).map(CotatoAttendanceWithSessionResponseToJSON)),
    };
}

