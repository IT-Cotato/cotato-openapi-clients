/* tslint:disable */
/* eslint-disable */
/**
 * CS-QUIZ 프로젝트 API 명세서
 * quiz api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CotatoMemberAttendResponse } from './CotatoMemberAttendResponse.js';
import {
    CotatoMemberAttendResponseFromJSON,
    CotatoMemberAttendResponseFromJSONTyped,
    CotatoMemberAttendResponseToJSON,
} from './CotatoMemberAttendResponse.js';

/**
 * 
 * @export
 * @interface CotatoMemberAttendanceRecordsResponse
 */
export interface CotatoMemberAttendanceRecordsResponse {
    /**
     * 요청한 기수 PK
     * @type {number}
     * @memberof CotatoMemberAttendanceRecordsResponse
     */
    generationId?: number;
    /**
     * 
     * @type {Array<CotatoMemberAttendResponse>}
     * @memberof CotatoMemberAttendanceRecordsResponse
     */
    memberAttendResponses?: Array<CotatoMemberAttendResponse>;
}

/**
 * Check if a given object implements the CotatoMemberAttendanceRecordsResponse interface.
 */
export function instanceOfCotatoMemberAttendanceRecordsResponse(value: object): value is CotatoMemberAttendanceRecordsResponse {
    return true;
}

export function CotatoMemberAttendanceRecordsResponseFromJSON(json: any): CotatoMemberAttendanceRecordsResponse {
    return CotatoMemberAttendanceRecordsResponseFromJSONTyped(json, false);
}

export function CotatoMemberAttendanceRecordsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoMemberAttendanceRecordsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'generationId': json['generationId'] == null ? undefined : json['generationId'],
        'memberAttendResponses': json['memberAttendResponses'] == null ? undefined : ((json['memberAttendResponses'] as Array<any>).map(CotatoMemberAttendResponseFromJSON)),
    };
}

export function CotatoMemberAttendanceRecordsResponseToJSON(value?: CotatoMemberAttendanceRecordsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'generationId': value['generationId'],
        'memberAttendResponses': value['memberAttendResponses'] == null ? undefined : ((value['memberAttendResponses'] as Array<any>).map(CotatoMemberAttendResponseToJSON)),
    };
}

