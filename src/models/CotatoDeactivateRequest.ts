/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CotatoCheckPolicyRequest } from './CotatoCheckPolicyRequest.js';
import {
    CotatoCheckPolicyRequestFromJSON,
    CotatoCheckPolicyRequestFromJSONTyped,
    CotatoCheckPolicyRequestToJSON,
} from './CotatoCheckPolicyRequest.js';

/**
 * 
 * @export
 * @interface CotatoDeactivateRequest
 */
export interface CotatoDeactivateRequest {
    /**
     * 
     * @type {string}
     * @memberof CotatoDeactivateRequest
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof CotatoDeactivateRequest
     */
    password: string;
    /**
     * 
     * @type {Array<CotatoCheckPolicyRequest>}
     * @memberof CotatoDeactivateRequest
     */
    checkedPolicies: Array<CotatoCheckPolicyRequest>;
}

/**
 * Check if a given object implements the CotatoDeactivateRequest interface.
 */
export function instanceOfCotatoDeactivateRequest(value: object): value is CotatoDeactivateRequest {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('checkedPolicies' in value) || value['checkedPolicies'] === undefined) return false;
    return true;
}

export function CotatoDeactivateRequestFromJSON(json: any): CotatoDeactivateRequest {
    return CotatoDeactivateRequestFromJSONTyped(json, false);
}

export function CotatoDeactivateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoDeactivateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'password': json['password'],
        'checkedPolicies': ((json['checkedPolicies'] as Array<any>).map(CotatoCheckPolicyRequestFromJSON)),
    };
}

export function CotatoDeactivateRequestToJSON(value?: CotatoDeactivateRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'email': value['email'],
        'password': value['password'],
        'checkedPolicies': ((value['checkedPolicies'] as Array<any>).map(CotatoCheckPolicyRequestToJSON)),
    };
}

