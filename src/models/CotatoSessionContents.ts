/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CotatoSessionContents
 */
export interface CotatoSessionContents {
    /**
     * 
     * @type {string}
     * @memberof CotatoSessionContents
     */
    itIssue?: CotatoSessionContentsItIssueEnum;
    /**
     * 
     * @type {string}
     * @memberof CotatoSessionContents
     */
    networking?: CotatoSessionContentsNetworkingEnum;
    /**
     * 
     * @type {string}
     * @memberof CotatoSessionContents
     */
    csEducation?: CotatoSessionContentsCsEducationEnum;
    /**
     * 
     * @type {string}
     * @memberof CotatoSessionContents
     */
    devTalk?: CotatoSessionContentsDevTalkEnum;
}


/**
 * @export
 */
export const CotatoSessionContentsItIssueEnum = {
    On: 'IT_ON',
    Off: 'IT_OFF'
} as const;
export type CotatoSessionContentsItIssueEnum = typeof CotatoSessionContentsItIssueEnum[keyof typeof CotatoSessionContentsItIssueEnum];

/**
 * @export
 */
export const CotatoSessionContentsNetworkingEnum = {
    On: 'NW_ON',
    Off: 'NW_OFF'
} as const;
export type CotatoSessionContentsNetworkingEnum = typeof CotatoSessionContentsNetworkingEnum[keyof typeof CotatoSessionContentsNetworkingEnum];

/**
 * @export
 */
export const CotatoSessionContentsCsEducationEnum = {
    On: 'CS_ON',
    Off: 'CS_OFF'
} as const;
export type CotatoSessionContentsCsEducationEnum = typeof CotatoSessionContentsCsEducationEnum[keyof typeof CotatoSessionContentsCsEducationEnum];

/**
 * @export
 */
export const CotatoSessionContentsDevTalkEnum = {
    On: 'DEVTALK_ON',
    Off: 'DEVTALK_OFF'
} as const;
export type CotatoSessionContentsDevTalkEnum = typeof CotatoSessionContentsDevTalkEnum[keyof typeof CotatoSessionContentsDevTalkEnum];


/**
 * Check if a given object implements the CotatoSessionContents interface.
 */
export function instanceOfCotatoSessionContents(value: object): value is CotatoSessionContents {
    return true;
}

export function CotatoSessionContentsFromJSON(json: any): CotatoSessionContents {
    return CotatoSessionContentsFromJSONTyped(json, false);
}

export function CotatoSessionContentsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoSessionContents {
    if (json == null) {
        return json;
    }
    return {
        
        'itIssue': json['itIssue'] == null ? undefined : json['itIssue'],
        'networking': json['networking'] == null ? undefined : json['networking'],
        'csEducation': json['csEducation'] == null ? undefined : json['csEducation'],
        'devTalk': json['devTalk'] == null ? undefined : json['devTalk'],
    };
}

export function CotatoSessionContentsToJSON(value?: CotatoSessionContents | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'itIssue': value['itIssue'],
        'networking': value['networking'],
        'csEducation': value['csEducation'],
        'devTalk': value['devTalk'],
    };
}

