/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CotatoMemberApproveRequest
 */
export interface CotatoMemberApproveRequest {
    /**
     * 
     * @type {number}
     * @memberof CotatoMemberApproveRequest
     * @deprecated
     */
    memberId: number;
    /**
     * 
     * @type {string}
     * @memberof CotatoMemberApproveRequest
     */
    position: CotatoMemberApproveRequestPositionEnum;
    /**
     * 
     * @type {number}
     * @memberof CotatoMemberApproveRequest
     */
    generationId: number;
}


/**
 * @export
 */
export const CotatoMemberApproveRequestPositionEnum = {
    None: 'NONE',
    Be: 'BE',
    Fe: 'FE',
    Design: 'DESIGN',
    Pm: 'PM'
} as const;
export type CotatoMemberApproveRequestPositionEnum = typeof CotatoMemberApproveRequestPositionEnum[keyof typeof CotatoMemberApproveRequestPositionEnum];


/**
 * Check if a given object implements the CotatoMemberApproveRequest interface.
 */
export function instanceOfCotatoMemberApproveRequest(value: object): value is CotatoMemberApproveRequest {
    if (!('memberId' in value) || value['memberId'] === undefined) return false;
    if (!('position' in value) || value['position'] === undefined) return false;
    if (!('generationId' in value) || value['generationId'] === undefined) return false;
    return true;
}

export function CotatoMemberApproveRequestFromJSON(json: any): CotatoMemberApproveRequest {
    return CotatoMemberApproveRequestFromJSONTyped(json, false);
}

export function CotatoMemberApproveRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoMemberApproveRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'memberId': json['memberId'],
        'position': json['position'],
        'generationId': json['generationId'],
    };
}

export function CotatoMemberApproveRequestToJSON(value?: CotatoMemberApproveRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'memberId': value['memberId'],
        'position': value['position'],
        'generationId': value['generationId'],
    };
}

