/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CotatoCreateChoiceRequest } from './CotatoCreateChoiceRequest.js';
import {
    CotatoCreateChoiceRequestFromJSON,
    CotatoCreateChoiceRequestFromJSONTyped,
    CotatoCreateChoiceRequestToJSON,
} from './CotatoCreateChoiceRequest.js';

/**
 * 
 * @export
 * @interface CotatoCreateMultipleQuizRequest
 */
export interface CotatoCreateMultipleQuizRequest {
    /**
     * 
     * @type {number}
     * @memberof CotatoCreateMultipleQuizRequest
     */
    number?: number;
    /**
     * 
     * @type {string}
     * @memberof CotatoCreateMultipleQuizRequest
     */
    question?: string;
    /**
     * 
     * @type {Blob}
     * @memberof CotatoCreateMultipleQuizRequest
     */
    image?: Blob;
    /**
     * 
     * @type {Array<CotatoCreateChoiceRequest>}
     * @memberof CotatoCreateMultipleQuizRequest
     */
    choices?: Array<CotatoCreateChoiceRequest>;
}

/**
 * Check if a given object implements the CotatoCreateMultipleQuizRequest interface.
 */
export function instanceOfCotatoCreateMultipleQuizRequest(value: object): value is CotatoCreateMultipleQuizRequest {
    return true;
}

export function CotatoCreateMultipleQuizRequestFromJSON(json: any): CotatoCreateMultipleQuizRequest {
    return CotatoCreateMultipleQuizRequestFromJSONTyped(json, false);
}

export function CotatoCreateMultipleQuizRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoCreateMultipleQuizRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'number': json['number'] == null ? undefined : json['number'],
        'question': json['question'] == null ? undefined : json['question'],
        'image': json['image'] == null ? undefined : json['image'],
        'choices': json['choices'] == null ? undefined : ((json['choices'] as Array<any>).map(CotatoCreateChoiceRequestFromJSON)),
    };
}

export function CotatoCreateMultipleQuizRequestToJSON(value?: CotatoCreateMultipleQuizRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'number': value['number'],
        'question': value['question'],
        'image': value['image'],
        'choices': value['choices'] == null ? undefined : ((value['choices'] as Array<any>).map(CotatoCreateChoiceRequestToJSON)),
    };
}

