/* tslint:disable */
/* eslint-disable */
/**
 * COTATO 프로젝트 API 명세서
 * api 명세서
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CotatoMemberResponse
 */
export interface CotatoMemberResponse {
    /**
     * 
     * @type {number}
     * @memberof CotatoMemberResponse
     */
    memberId: number;
    /**
     * 
     * @type {string}
     * @memberof CotatoMemberResponse
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CotatoMemberResponse
     */
    backFourNumber: string;
    /**
     * 
     * @type {string}
     * @memberof CotatoMemberResponse
     */
    role?: CotatoMemberResponseRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof CotatoMemberResponse
     */
    position?: CotatoMemberResponsePositionEnum;
    /**
     * 
     * @type {string}
     * @memberof CotatoMemberResponse
     */
    status: CotatoMemberResponseStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof CotatoMemberResponse
     */
    passedGenerationNumber?: number;
}


/**
 * @export
 */
export const CotatoMemberResponseRoleEnum = {
    Member: 'MEMBER',
    Manager: 'MANAGER',
    Admin: 'ADMIN',
    Dev: 'DEV'
} as const;
export type CotatoMemberResponseRoleEnum = typeof CotatoMemberResponseRoleEnum[keyof typeof CotatoMemberResponseRoleEnum];

/**
 * @export
 */
export const CotatoMemberResponsePositionEnum = {
    None: 'NONE',
    Be: 'BE',
    Fe: 'FE',
    Design: 'DESIGN',
    Pm: 'PM'
} as const;
export type CotatoMemberResponsePositionEnum = typeof CotatoMemberResponsePositionEnum[keyof typeof CotatoMemberResponsePositionEnum];

/**
 * @export
 */
export const CotatoMemberResponseStatusEnum = {
    Inactive: 'INACTIVE',
    Rejected: 'REJECTED',
    Requested: 'REQUESTED',
    Retired: 'RETIRED',
    Approved: 'APPROVED'
} as const;
export type CotatoMemberResponseStatusEnum = typeof CotatoMemberResponseStatusEnum[keyof typeof CotatoMemberResponseStatusEnum];


/**
 * Check if a given object implements the CotatoMemberResponse interface.
 */
export function instanceOfCotatoMemberResponse(value: object): value is CotatoMemberResponse {
    if (!('memberId' in value) || value['memberId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('backFourNumber' in value) || value['backFourNumber'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function CotatoMemberResponseFromJSON(json: any): CotatoMemberResponse {
    return CotatoMemberResponseFromJSONTyped(json, false);
}

export function CotatoMemberResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CotatoMemberResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'memberId': json['memberId'],
        'name': json['name'],
        'backFourNumber': json['backFourNumber'],
        'role': json['role'] == null ? undefined : json['role'],
        'position': json['position'] == null ? undefined : json['position'],
        'status': json['status'],
        'passedGenerationNumber': json['passedGenerationNumber'] == null ? undefined : json['passedGenerationNumber'],
    };
}

export function CotatoMemberResponseToJSON(value?: CotatoMemberResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'memberId': value['memberId'],
        'name': value['name'],
        'backFourNumber': value['backFourNumber'],
        'role': value['role'],
        'position': value['position'],
        'status': value['status'],
        'passedGenerationNumber': value['passedGenerationNumber'],
    };
}

